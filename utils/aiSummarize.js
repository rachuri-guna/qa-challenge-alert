import axios from 'axios';
import dotenv from 'dotenv';
dotenv.config();

process.env.NODE_TLS_REJECT_UNAUTHORIZED = '0'; // Optional for dev; avoid in prod

export async function getAISummary(textContent) {
  if (!textContent || textContent.trim() === '') {
    return '⚠️ No content provided for summarization.';
  }

  const prompt = `
You are an expert AI summarizer specialized in reading coding challenge pages (including hackathons, hiring challenges, and ideation contests) and generating short, structured summaries in English.

Your job is to help developers and professionals quickly understand the challenge by extracting the most relevant details from the provided description.

Here is the extracted text content of the challenge page:
${textContent}

Please generate a summary using the following format in **English only**:

Challenge: <Name>  
💡 Type: <Type> | 💼 Organiser: <Host> | 📍 Location: <Location> | 🎯 Eligibility: <Eligibility> | 📈 Experience: <Level> | 🏆 Rewards: <Prizes> | 🕒 Deadline: <Date>  
🔗 Apply: <Direct Link>

Use "Not specified" if any field is missing.

⚠️ If the content is unclear, unreadable, or missing key info, simply respond with:
"⚠️ Challenge summary not available due to unreadable or insufficient content."

Be brief, clean, and structured. The output should be ready to include in an automated email digest.
  `;

  try {
    const response = await axios.post(
      'https://openrouter.ai/api/v1/chat/completions',
      {
        model: 'meta-llama/llama-4-scout:free',
        messages: [{ role: 'user', content: prompt }],
        temperature: 0.3,
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json',
        },
        timeout: 15000,
      }
    );

    const summary = response.data.choices[0].message.content.trim();
    return summary || '⚠️ No summary generated by AI.';
  } catch (error) {
    console.error('AI summarization failed:', {
      status: error.response?.status,
      data: error.response?.data,
      message: error.message,
    });
    return '⚠️ AI summarization failed. Please check the logs.';
  }
}
